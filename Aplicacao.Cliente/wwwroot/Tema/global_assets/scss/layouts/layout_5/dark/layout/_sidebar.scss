/* ------------------------------------------------------------------------------
 *
 *  # Sidebar layouts
 *
 *  Sidebar components, main navigation and sidebar itself
 *
 * ---------------------------------------------------------------------------- */


// Sidebar base
// ------------------------------

// Base
.sidebar {
	display: flex;
	flex-direction: column;
	flex-shrink: 0;
	position: fixed;
	top: 0;
	bottom: 0;
	box-sizing: content-box;
	width: $sidebar-base-width;
}

// Main and secondary sidebars default position
.sidebar-main,
.sidebar-secondary {
	left: -($sidebar-base-width * 1.1);
	box-shadow: $sidebar-left-mobile-box-shadow;
}

// Right sidebar default position
.sidebar-right {
	right: -($sidebar-base-width * 1.1);
	box-shadow: $sidebar-right-mobile-box-shadow;
}

// Sidebar content
.sidebar-content {
	overflow-y: auto;
	-webkit-overflow-scrolling: touch;
}

// Content section
.sidebar-section {
	position: relative;
	flex-shrink: 0;

	// Remove extra spacing in last form group containers
	.form-group:last-child {
		margin-bottom: 0;
	}
}

// Content section header
.sidebar-section-header {
	display: flex;
	align-items: center;
	padding: $sidebar-section-header-padding-y $sidebar-section-header-padding-x;
}

// Content section body
.sidebar-section-body {
	position: relative;
	padding: $sidebar-section-body-padding-y $sidebar-section-body-padding-x;
}

// Resized sidebar sections
//
// Add this class to containers that are only visible when
// sidebar is resized. And use .sidebar-resize-hide to hide elements.
.sidebar-resize-show {
	display: none;
}



// Sidebar togglers
// ------------------------------

// Toggle main sidebar on mobile
.sidebar-mobile-expanded {

	// Left sidebars
	&.sidebar-main,
	&.sidebar-secondary {
		left: 0;
	}

	// Right sidebar
	&.sidebar-right {
		right: 0;
	}
}



// User widget
// ------------------------------

.sidebar-user {
	$sidebar-user-img-size: 2.375rem;
	img {
		height: $sidebar-user-img-size;
		width: $sidebar-user-img-size;
		margin-top: (($line-height-computed * 2) - $sidebar-user-img-size) / 2;
		margin-bottom: (($line-height-computed * 2) - $sidebar-user-img-size) / 2;
	}
}



// Sidebar navigation
// ------------------------------

// Main sidebar nav
.nav-sidebar {
	flex-direction: column;

	// Items
	.nav-item {
		position: relative;

		// Add vertical spacing to the first and last nav items
		&:not(.nav-item-header) {
			&:first-child {
				padding-top: $navigation-padding-y;
			}
			&:last-child {
				padding-bottom: $navigation-padding-y;
			}
		}

		// Add spacing between nav items for better visual separation
		&:not(.nav-item-divider) {
			margin-bottom: $navigation-item-spacer-y;

			&:last-child {
				margin-bottom: 0;
			}
		}
	}

	// Text style in top level links
	> .nav-item > .nav-link {
		font-weight: $navigation-item-font-weight;
	}

	// Links
	.nav-link {
		position: relative;
		display: flex;
		align-items: flex-start;
		color: $navigation-item-color;
		padding: $navigation-item-padding-y $navigation-item-padding-x;
		@include transition(background-color ease-in-out $component-transition-timer, color ease-in-out $component-transition-timer);

		// Icons
		i {
			margin-right: $navigation-item-padding-x;
			margin-top: ($line-height-computed - $icon-font-size) / 2;
			margin-bottom: ($line-height-computed - $icon-font-size) / 2;
			top: 0;
		}

		// Badges
		.badge {
			@include transition(background-color ease-in-out $component-transition-timer, border-color ease-in-out $component-transition-timer);
		}

		// Ignore disabled links when adding colors
		&:not(.disabled) {
			@include hover {
				color: $navigation-item-hover-color;
				background-color: $navigation-item-hover-bg;
			}
		}

		// Disabled state
		&.disabled {
			@include plain-hover-focus {
				background-color: transparent;
				opacity: $navigation-item-disabled-opacity;
			}
		}
	}

	// Active links in submenu
	.nav-item > .nav-link.active {
		background-color: $navigation-item-sub-active-bg;
		color: $navigation-item-sub-active-color;
	}

	// Link in opened submenu
	.nav-item-open > .nav-link:not(.disabled),
	> .nav-item-expanded:not(.nav-item-open) > .nav-link {
		background-color: $navigation-item-hover-bg;
		color: $navigation-item-hover-color;
	}

	// Active link in top level
	> .nav-item-open > .nav-link:not(.disabled),
	> .nav-item > .nav-link.active {
		background-color: $navigation-item-active-bg;
		color: $navigation-item-active-color;
	}

	// Submenus
	> .nav-item-submenu > .nav-group-sub {
		background-color: $navigation-item-sub-bg;
	}

	// Nav item header
	.nav-item-header {
		padding: $navigation-item-padding-y $navigation-item-padding-x;

		// Hide icons by default and show them in folded mode
		> i {
			display: none;
		}
	}

	// Divider
	.nav-item-divider {
		margin: $navigation-padding-y 0;
		height: 1px;
		background-color: $sidebar-border-color;
	}
}

// Nav items with submenu
.nav-item-submenu {
	> .nav-link {
		padding-right: ($navigation-item-padding-x + ($icon-font-size * 1.5));

		// Direction arrow
		&:after {
			content: $icon-menu-sub-arrow-ltr;
		    font-family: $icon-font-family;
		    display: inline-block;
		    font-size: $icon-font-size;
		    vertical-align: middle;
		    line-height: 1;
		    position: absolute;
			top: $navigation-item-padding-y;
			margin-top: ($line-height-computed - $icon-font-size) / 2;
		    right: $navigation-item-padding-x;
		    @include transition(transform 0.25s ease-in-out);
		    @include ll-font-smoothing();

		    // RTL
		    [dir=rtl] & {
				content: $icon-menu-sub-arrow-rtl;
		    }
		}
	}

	// When submenu is opened, rotate arrow
	&.nav-item-open > .nav-link {
		&:after {
			transform: rotate(90deg);
		}
	}
}

// Sidebar nav submenus
.nav-group-sub {
	display: block;

	// Hide submenus by default
	.nav-item:not(.nav-item-expanded) > & {
		display: none;
	}

	// Links
	.nav-link {
		padding: $navigation-sub-padding-y $navigation-item-padding-x $navigation-sub-padding-y (($navigation-item-padding-x * 2) + $icon-font-size);
	}

	// Third level menus
	.nav-group-sub {
		.nav-link {
			padding-left: (($navigation-item-padding-x * 3) + $icon-font-size);
		}

		// Fourth level
		.nav-group-sub {
			.nav-link {
				padding-left: (($navigation-item-padding-x * 4) + $icon-font-size);
			}
		}
	}

	// Re-position arrow icon in submenu items since padding differs
	.nav-item-submenu > .nav-link {
		&:after {
			top: $navigation-sub-padding-y;
		}
	}
}

// Scrollspy nav
.nav-scrollspy {
	.nav-link.active + .nav,
	.nav-item-open .nav-link:not(.active) + .nav {
		display: block;
	}

	// Rotate direction icon
	.nav-link {
		&.active:after {
			transform: rotate(90deg);
		}
	}
}


//
// Optional navigation styles
//

// Reversed icons alignment
@if $enable-sidebar-nav-icons-reverse {
	.nav-sidebar-icons-reverse {
		.nav-link {
			padding-right: $navigation-item-padding-x + $navigation-item-padding-x + $icon-font-size;

			i {
				position: absolute;
				top: $navigation-item-padding-y;
				right: $navigation-item-padding-x;
				margin-right: 0;
			}
		}

		.nav-item-submenu {
			.nav-link {
				padding-right: ($nav-link-padding-x + $icon-font-size + $icon-font-size + $nav-link-padding-x);

				&:after {
					right: ($nav-link-padding-x + $icon-font-size + $icon-font-size);
				}
			}
		}

		.nav-group-sub {
			.nav-link {
				padding-left: ($navigation-item-padding-x * 2);

				i {
					top: $navigation-sub-padding-y;
				}
			}

			.nav-group-sub {
				.nav-link {
					padding-left: ($navigation-item-padding-x * 3);
				}

				.nav-group-sub {
					.nav-link {
						padding-left: ($navigation-item-padding-x * 4);
					}
				}
			}
		}
	}
}

// Bordered navigation
@if $enable-sidebar-nav-bordered {
	.nav-sidebar-bordered {
		> .nav-item:not(.nav-item-divider) {
			margin-bottom: 0;
		}

		> .nav-item {
			border-top: $navigation-bordered-border-width solid $navigation-bordered-border-color;
		}

		> .nav-item-header {
			background-color: $navigation-bordered-header-bg;
			border-top: $navigation-bordered-border-width solid $navigation-bordered-border-color;
			margin: 0;
		}
	}
}


// Sidebar options
// ------------------------------

// Dark sidebar
.sidebar-dark {
	background-color: $sidebar-dark-bg;
}

// Light sidebar
.sidebar-light {
	background-color: $sidebar-light-bg;
}



//
// Generate series of `.sidebar-expand-*` responsive classes for configuring
// where sidebar collapses. If togglers are in main navbar, make sure breakpoints match.
// ------------------------------

.sidebar-expand {
	@each $breakpoint in map-keys($grid-breakpoints) {
		$next: breakpoint-next($breakpoint, $grid-breakpoints);
		$infix: breakpoint-infix($next, $grid-breakpoints);

		&#{$infix} {
			@include media-breakpoint-up($next) {
				position: static;
				margin-left: $content-container-padding-x;
				margin-right: $content-container-padding-x;
				margin-bottom: $spacer;
				@include border-radius($border-radius);
				@include box-shadow($card-box-shadow);

				// Make sure submenu is visible
				.sidebar-content {
					overflow: visible;
				}

				// Collapsed state
				&.sidebar-collapsed {
					display: none;
				}

				// Sidebars
				&.sidebar-main {
					z-index: $sidebar-zindex-main;
				}

				// Mini sidebar
				&.sidebar-main-resized {
					width: $sidebar-mini-width;

					// Remove horizontal spacing from sections
					.sidebar-section-body {
						padding-left: 0;
						padding-right: 0;
					}

					// Control elements' visibility.
					// Use .sidebar-resize-hide to hide element when sidebar is resized
					// Use .sidebar-resize-show to show element when sidebar is resized
					.sidebar-resize-hide {
						display: none;
					}
					.sidebar-resize-show {
						display: block;
					}

					// Center link and header content
					.nav-sidebar > .nav-item > .nav-link,
					.nav-sidebar > .nav-item-header {
						padding-left: 0;
						padding-right: 0;
						justify-content: center;
					}

					// Vertical navigation
					.nav-sidebar {

						// Header
						> .nav-item-header {
							display: flex;

							// Icons
							> i {
								position: static;
								display: block;
								margin-top: (($line-height-computed - $icon-font-size) / 2);
								margin-bottom: (($line-height-computed - $icon-font-size) / 2);
							}

							// Hide text label
							> div {
								display: none;
							}
						}

						// Nav items
						> .nav-item {

							// Links
							> .nav-link {

								// Icons
								> i {
									margin-left: 0;
									margin-right: 0;
								}

								// Hide submenu indicator
								&:after {
									content: none;
								}

								// Hide text
								> span {
									display: none;
								}
							}
						}

						// Items with submenu
						> .nav-item-submenu {

							// Highlight active item when mouse is in submenu
							&:not(.nav-item-open):not(.nav-item-expanded) {
								&:hover,
								&:focus {
									> .nav-link:not(.active):not(.disabled) {
										background-color: $navigation-item-hover-bg;
										color: $navigation-item-hover-color;
									}
								}
							}

							// Submenu
							> .nav-group-sub {
								position: absolute;
								top: -($navigation-padding-y);
								right: -($sidebar-base-width);
								width: $sidebar-base-width;
								border: $dropdown-border-width solid $dropdown-border-color;
								display: none !important;
								z-index: $zindex-dropdown;
								@include box-shadow($shadow-depth2);
								@include border-radius($border-radius);

								// Submenu title
								&[data-submenu-title] {
									&:before {
										content: attr(data-submenu-title);
										display: block;
										padding: $navigation-item-padding-y $navigation-item-padding-x;
										padding-bottom: 0;
										margin-top: $navigation-padding-y;
										opacity: $navigation-sub-item-opacity;
									}
								}

								// Flip menu if there's not enough space at the bottom
								&-reversed {
									top: auto;
									bottom: -($navigation-padding-y);
								}
							}

							// Display submenu on hover
							&.nav-group-sub-visible > .nav-group-sub {
								display: block !important;
							}
						}

						// Submenu
						.nav-group-sub {
							.nav-link {
								padding-left: $navigation-item-padding-x;
							}

							// Third level
							.nav-group-sub {
								.nav-link {
									padding-left: ($navigation-item-padding-x + $icon-font-size);
								}

								// Fourth level
								.nav-group-sub {
									.nav-link {
										padding-left: (($navigation-item-padding-x * 2) + $icon-font-size);
									}
								}
							}
						}
					}

					// Navigation in light sidebar
					&.sidebar-light {
						.nav-sidebar > .nav-item-submenu {
							> .nav-group-sub {
								background-color: $sidebar-light-bg;
							}
						}
					}

					// Navigation in dark sidebar
					&.sidebar-dark {
						.nav-sidebar > .nav-item-submenu {
							> .nav-group-sub {
								background-color: $sidebar-dark-bg;
							}
						}
					}
				}

				// Optional sidebars
				&.sidebar-secondary {
					z-index: $sidebar-zindex-secondary;
				}
				&.sidebar-right {
					z-index: $sidebar-zindex-right;
				}
				
				// Sectioned sidebar
				.sidebar-sections {
					background-color: transparent;
					border: 0;
					margin: 0;
					box-shadow: none;
					border-radius: 0;
				}

				// Sticky sidebar
				&.sidebar-sticky {
		            @supports (position: sticky) {
		                position: sticky;
		                top: map-get($spacers, 3);
		                z-index: $zindex-sticky;
		            }
				}
			}

			@include media-breakpoint-down($breakpoint) {
				border: 0;
				z-index: $sidebar-zindex;
				@include transition(left ease-in-out $component-transition-timer, right ease-in-out $component-transition-timer);
			}
		}
	}
}



// Sidebar components
// ------------------------------

// Button group
.row-tile {
	div[class*=col] {

		//
		// Rounded corners
		//

		// Remove rounded corners from all buttons
		.btn {
			@include border-radius(0);
		}

		// Keep left rounded corners for the first and last buttons only
		&:first-child {
			.btn {
				&:first-child {
					@if $enable-rounded {
						border-top-left-radius: $border-radius;
					}
				}
				&:last-child {
					@if $enable-rounded {
						border-bottom-left-radius: $border-radius;
					}
				}
			}
		}

		// Keep right rounded corners for the first and last buttons only
		&:last-child {
			.btn {
				&:first-child {
					@if $enable-rounded {
						border-top-right-radius: $border-radius;
					}
				}
				&:last-child {
					@if $enable-rounded {
						border-bottom-right-radius: $border-radius;
					}
				}
			}
		}

		//
		// Borders
		//

		// Remove top borders
		.btn + .btn {
			border-top: 0;
		}

		// Remove left borders
		+ div[class*=col] {
			.btn {
				border-left: 0;
			}
		}
	}
}
