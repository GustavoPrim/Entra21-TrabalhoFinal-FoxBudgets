/* ------------------------------------------------------------------------------
*
*  # Bootstrap multiselect
*
*  Styles for multiselect.js - custom multiple select plugin
*
* ---------------------------------------------------------------------------- */

// Check if component is enabled
@if $enable-multiselect {


    // Base
    // ------------------------------

    // Wrapper
    .multiselect-native-select {
        position: relative;
        display: block;

        // Hide original select
        select {
            border: 0 !important;
            clip: rect(0 0 0 0) !important;
            height: 0 !important;
            margin: 0 !important;
            overflow: hidden !important;
            padding: 0 !important;
            position: absolute !important;
            width: 0 !important;
            left: 0;
            top: 0;
            display: none;
        }
    }

    // Main button
    .multiselect {
        width: 100%;
        text-align: left;
        padding-left: $input-padding-x;
        padding-right: ($input-padding-x + ($icon-font-size * 1.5));
        text-transform: $multiselect-text-transform;
        background-color: $input-bg;
        border-color: $input-border-color;
        transition: $input-transition;
        @include text-truncate();

        // Caret
        &:after {
            position: absolute;
            top: 50%;
            right: $input-padding-x;
            margin-top: -($caret-font-size / 2);
        }

        // Allow font weight variations
        &:not([class*=font-weight-]) {
            font-weight: $multiselect-font-weight;
        }

        // Focus state
        &:not(:disabled):not(.disabled):active:focus,
        &:not(:disabled):not(.disabled):focus,
        .show > &:not(:disabled):not(.disabled).dropdown-toggle {
            border-color: $input-focus-border-color;
            box-shadow: $input-focus-box-shadow;
        }

        // Disabled state
        &.disabled {
            background-color: $input-disabled-bg;
            color: $input-disabled-color;
        }


        //
        // Make it as an input instead of button
        //

        // Large
        &.btn-lg {
            padding-left: $input-padding-x-lg;
            padding-right: ($input-padding-x-lg + ($icon-font-size * 1.5));

            // Caret spacer
            &:after {
                right: $input-padding-x-lg;
            }
        }

        // Small
        &.btn-sm {
            padding-left: $input-padding-x-sm;
            padding-right: ($input-padding-x-sm + ($icon-font-size * 1.5));

            // Caret spacer
            &:after {
                right: $input-padding-x-sm;
            }
        }
    }

    // Container
    .multiselect-container {
        max-height: $multiselect-max-height;
        overflow-y: auto;
        width: 100%;
    }

    // Item group
    .multiselect-group {
        font-weight: $font-weight-semibold;

        // Extra spacing for groups
        .multiselect-item + & {
            margin-top: $dropdown-padding-y;
        }

        // Disabled state
        &.disabled {
            color: $dropdown-link-disabled-color;
            cursor: $cursor-disabled;
        }
    }

    // Select All option
    .multiselect-all {
        font-weight: $font-weight-semibold;
    }

    // Filter
    .multiselect-filter {
        position: relative;
        padding: ($dropdown-item-padding-x - $dropdown-padding-y) $dropdown-item-padding-x;
        margin-bottom: $dropdown-padding-y;
    }

    // Items in option groups
    .multiselect-group-option-indented {
        .dropdown-item {
            padding-left: $dropdown-item-padding-x * 2;
        }
    }

    // Search field
    .multiselect-search {
        border-color: transparent;
        background-color: $input-filled-bg;

        &:focus {
            background-color: $input-filled-focus-bg;
            border-color: transparent;
            box-shadow: none;
        }
    }


    // Misc
    // ------------------------------

    // Filled input
    .btn-multiselect-filled {
        border: 0;
        height: $input-height;
        border-bottom: $input-border-width solid $input-border-color;
        @include border-bottom-radius(0);

        // Fix background color
        &,
        &:hover {
            background-color: $input-filled-bg;
        }

        // Focus and active states
        &:not(:disabled):not(.disabled):focus,
        &:not(:disabled):not(.disabled):active,
        &:not(:disabled):not(.disabled):active:focus,
        .show > &:not(:disabled):not(.disabled).dropdown-toggle {
            background-color: $input-filled-focus-bg;
            border-color: $input-focus-border-color;
            box-shadow: $input-box-shadow, 0 (-$input-border-width) 0 $input-focus-border-color inset;
        }

        // Disabled state
        &:disabled {
            background-color: $input-filled-disabled-bg;
        }
    }

    // Inside input group
    .input-group {
        .multiselect-native-select {
            flex: 1;
        }

        .multiselect:focus,
        .show > .multiselect {
            z-index: 3;
        }
    }
}
